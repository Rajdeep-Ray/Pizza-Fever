{"version":3,"sources":["images/pizza.png","images/pizzaHori-1.jpg","images/pizzaHori-2.jpg","images/pizzaHori-3.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","Navbar","bg","variant","Brand","href","src","pizzalogo","width","height","className","alt","Nav","Link","NavDropdown","title","id","Item","Form","inline","FormControl","type","placeholder","Button","Carousel","interval","pizzaHori1","pizzaHori2","pizzaHori3","Container","Row","Col","Card","style","Img","Body","Title","Text","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67ebe356.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.9e63f21d.png\";","module.exports = __webpack_public_path__ + \"static/media/pizzaHori-1.d0075937.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizzaHori-2.239386b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pizzaHori-3.c070fb91.jpg\";","import React from 'react';\nimport pizzalogo from './images/pizza.png';\nimport pizzaHori1 from './images/pizzaHori-1.jpg';\nimport pizzaHori2 from './images/pizzaHori-2.jpg';\nimport pizzaHori3 from './images/pizzaHori-3.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Form, Nav, FormControl, Button, NavDropdown, Carousel, Container, Col, Row, Card } from 'react-bootstrap'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#home\">\n          <img\n            src={pizzalogo}\n            width=\"50\"\n            height=\"50\"\n            className=\"d-inline-block align-top\"\n            alt=\"Pizza logo\"\n          />\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#features\">Features</Nav.Link>\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Regular</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Combo</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Super Sale</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-primary\">Search</Button>\n        </Form>\n      </Navbar>\n\n      <Carousel interval={3500}>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={pizzaHori1}\n            height=\"500\"\n            alt=\"First slide\"\n          />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={pizzaHori2}\n            height=\"500\"\n            alt=\"Third slide\"\n          />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={pizzaHori3}\n            height=\"500\"\n            alt=\"Third slide\"\n          />\n        </Carousel.Item>\n      </Carousel>\n\n      <br />\n\n      <div className='text-center'>\n        <h1>\n          Veg Pizzas\n        </h1>\n      </div>\n      <br />\n      <Container>\n        <Row>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/Margherit.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>Margherita</Card.Title>\n                <Card.Title>₹ 199</Card.Title>\n                <Card.Text>\n                  A hugely popular margherita, with a deliciously tangy single cheese topping\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/Fresh_Veggie.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>FRESH VEGGIE</Card.Title>\n                <Card.Title>₹ 335</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/Digital_Veggie_Paradise_olo_266x265.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>VEGGIE PARADISE</Card.Title>\n                <Card.Title>₹ 395</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      <br />\n\n      <div className='text-center'>\n        <h1>\n          Non-Veg Pizzas\n        </h1>\n      </div>\n      <br />\n      <Container>\n        <Row>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/Pepper_Barbeque.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>PEPPER BARBECUE CHICKEN</Card.Title>\n                <Card.Title>₹ 335</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/Non-Veg_Supreme.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>Non Veg Supreme</Card.Title>\n                <Card.Title>₹ 570</Card.Title>\n                <Card.Text>\n                  Bite into supreme delight of Black Olives, Onions, Grilled Mushrooms, Pepper BBQ Chicken, Peri-Peri Chicken, Grilled Chicken Rashers\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src='https://www.dominos.co.in/files/items/IndianChickenTikka.jpg' height='250' width='250'/>\n              <Card.Body>\n                <Card.Title>Indi Chicken Tikka</Card.Title>\n                <Card.Title>₹ 570</Card.Title>\n                <Card.Text>\n                  The wholesome flavour of tandoori masala with Chicken tikka I onion I red paprika I mint mayo\n                </Card.Text>\n                <Button variant=\"primary\">Add to Cart</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <br />\n      <div className=\"Footer\">\n        <br />\n        <h1>Pizza Fever</h1>\n        <h5>We not only deliver Pizzas but also deliver happiness. Your happiness is our earning</h5>\n        <hr />\n        <h4>\n          THANK YOU, VISIT AGAIN\n        </h4>\n        <h7>\n          © Pizza Fever | 2020\n        </h7>\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}